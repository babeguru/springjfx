buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE"
    }
}

plugins {
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.5"
    id "com.jfrog.bintray" version "1.8.1"
    id "com.jfrog.artifactory" version"4.7.3"
    id "maven-publish"
}

javafx {
    version = "11.0.+"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'id.web.hikmasoft'
version '1.1-RELEASE'

mainClassName = "$moduleName/id.web.hikmasoft.MainApp"

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "babeguru"
            name "Hendra Dwi Saputra"
            email "babeguru@gmail.com"
        }
    }

    scm {
        url "https://github.com/babeguru/springjfx"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'id.web.hikmasoft'
            artifactId 'springjfx'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Spring Boot JavaFX Application')
                root.appendNode('name', 'springjfx')
                root.appendNode('url', 'https://github.com/babeguru/springjfx')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']

    pkg {
        repo = 'springjfx'
        name = 'springjfx'
        userOrg = 'babeguru'
        licenses = ['MIT']
        publish = true
        vcsUrl = 'https://github.com/babeguru/springjfx.git'
        version {
            name = project.version
            desc = System.getProperty("build.number")
            released  = new Date()
        }
    }

}

artifactory {
    contextUrl = 'http://oss.jfrog.org'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = System.getProperty('bintray.user')
            password = System.getProperty('bintray.key')
        }
        defaults {
            publications('mavenPublication')
            publishArtifacts = true
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
    clientConfig.info.setBuildNumber(System.getProperty('build.number'))
}
